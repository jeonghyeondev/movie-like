{"version":3,"sources":["components/MovieSearch.js","components/MovieItem.js","api.js","components/MovieList.js","pages/MoviePage.js","App.js","reportWebVitals.js","index.js"],"names":["SearchFormBlock","styled","form","MovieSearch","props","useState","searchValue","setSearchValue","type","placeholder","value","onChange","e","target","onClick","preventDefault","search","MovieItemBlock","div","MovieItem","id","title","image","subtitle","pubDate","actor","userRating","poster","href","rel","className","src","alt","replace","api","axios","create","baseURL","headers","movieApi","word","get","params","query","display","MovieListBlock","override","css","MovieList","movies","setMovies","movieDatas","setMovieDatas","searchMovie","setSearchMovie","loading","setLoading","a","response","data","items","console","log","size","color","length","total","map","movie","link","MoviePageBlock","MoviePage","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.725a5f61.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst SearchFormBlock = styled.form`\n  width: 400px;\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  position: relative;\n  input {\n    width: 100%;\n    height: 50px;\n    color: #c0a789;\n    background: #4d4f54;\n    padding: 0 110px 0 10px;\n    border: 1px solid #c0a789;\n    border-radius: 10px;\n    font-size: 18px;\n  }\n  input::placeholder {\n    color: #c0a789;\n  }\n  input:focus {\n    outline: none;\n    color: #c0a789;\n  }\n  button {\n    position: absolute;\n    right: 0;\n    top: 0;\n    background: none;\n    height: 100%;\n    width: 100px;\n    border: none;\n    color: #c0a789;\n    font-size: 16px;\n  }\n`;\n\nconst MovieSearch = (props) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleSearchInputChanges = (e) => {\n    setSearchValue(e.target.value);\n  };\n\n  const resetInputField = () => {\n    setSearchValue('');\n  };\n\n  const onSearchFunction = (e) => {\n    e.preventDefault();\n    props.search(searchValue);\n    resetInputField();\n  };\n\n  return (\n    <SearchFormBlock>\n      <input\n        type=\"text\"\n        placeholder=\"영화를 검색해보세요\"\n        value={searchValue}\n        onChange={handleSearchInputChanges}\n      />\n      <button onClick={onSearchFunction}>SEARCH</button>\n    </SearchFormBlock>\n  );\n};\n\nexport default MovieSearch;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst MovieItemBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: none;\n  flex-basis: 47%;\n  margin-top: 3%;\n  box-sizing: border-box;\n  background: #e8e8e8;\n  padding: 20px;\n  margin: 1.5%;\n  a {\n    display: flex;\n  }\n  .item_poster {\n    img {\n      width: 130px;\n    }\n  }\n  .item_desc {\n    margin-left: 20px;\n    h3 {\n      color: #000;\n      font-size: 20px;\n      line-height: 1.5;\n    }\n    p {\n      line-height: 1.5;\n      color: #4a4a4a;\n      span {\n        display: inline-block;\n        padding-right: 20px;\n        color: #af8a5d;\n      }\n    }\n    .movie_subtitle {\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nconst MovieItem = (props) => {\n  const { id, title, image, subtitle, pubDate, actor, userRating } = props;\n  const DEFAULT_IMAGE = 'https://via.placeholder.com/130x185';\n  const poster = image === '' ? DEFAULT_IMAGE : image;\n\n  return (\n    <MovieItemBlock>\n      <a href={id} target=\"_blank\" rel=\"noopener noreferrer\">\n        <div className=\"item_poster\">\n          <img src={poster} alt={title} />\n        </div>\n        <div className=\"item_desc\">\n          <h3 className=\"movie_title\">\n            {title.replace(/<b>/gi, '').replace(/<\\/b>/gi, '')}\n          </h3>\n          <p className=\"movie_subtitle\">{subtitle.replace('&amp;', '&')}</p>\n          <p className=\"movie_rating\">\n            <span>평점</span> {userRating}\n          </p>\n          <p className=\"movie_data\">\n            <span>개봉</span> {pubDate}\n          </p>\n          <p className=\"movie_actor\">\n            <span>출연</span> {actor}\n          </p>\n        </div>\n      </a>\n    </MovieItemBlock>\n  );\n};\n\nexport default MovieItem;\n","import axios from 'axios';\n\nconst ID_KEY = 'tTK3P0kQ0Hg7Bo_QleLw';\nconst SECRET_KEY = 'IEOluexD8z';\n\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'X-Naver-Client-Id': ID_KEY,\n    'X-Naver-Client-Secret': SECRET_KEY,\n  },\n});\n\nexport const movieApi = {\n  searchValue: (word) =>\n    api.get('/v1/search/movie.json', {\n      params: {\n        query: word,\n        display: 20,\n      },\n    }),\n};\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport BeatLoader from 'react-spinners/BeatLoader';\nimport MovieSearch from './MovieSearch';\nimport MovieItem from './MovieItem';\nimport { movieApi } from '../api';\n\nconst MovieListBlock = styled.div`\n  .movies_area {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n  }\n  .total_area {\n    padding: 50px 0 20px;\n    text-align: center;\n    color: #b3b3b3;\n    font-size: 16px;\n    span {\n      color: #fff;\n    }\n  }\n  .noData {\n    font-size: 30px;\n    color: #c0a789;\n    text-align: center;\n    margin-top: 100px;\n  }\n`;\n\nconst override = css`\n  display: flex;\n  justify-content: center;\n  margin-top: 100px;\n`;\n\nconst MovieList = () => {\n  const [movies, setMovies] = useState([]);\n  const [movieDatas, setMovieDatas] = useState('');\n  const [searchMovie, setSearchMovie] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const search = async (searchValue) => {\n    setLoading(true);\n    try {\n      const response = await movieApi.searchValue(searchValue);\n      setMovies(response.data.items);\n      setMovieDatas(response.data);\n      setSearchMovie(searchValue);\n    } catch (e) {\n      console.log(e);\n    }\n    setLoading(false);\n  };\n\n  if (loading) {\n    return <BeatLoader size={30} color={'#c0a789'} loading css={override} />;\n  }\n\n  if (!movies) {\n    return;\n  }\n  return (\n    <MovieListBlock>\n      <MovieSearch search={search} />\n\n      {!searchMovie ? (\n        <p className=\"noData\">영화 검색을 해보세요 🤗🤗🤗</p>\n      ) : (\n        <div>\n          {movies.length > 0 ? (\n            <div className=\"total_area\">\n              <p>\n                <span>{searchMovie}</span> 검색 결과 입니다. Total{' '}\n                <span>{movieDatas.total}</span>개 입니다.\n              </p>\n            </div>\n          ) : (\n            <div className=\"total_area\">\n              <p>검색결과가 없습니다.</p>\n            </div>\n          )}\n        </div>\n      )}\n\n      <div className=\"movies_area\">\n        {movies.map((movie) => (\n          <MovieItem\n            key={movie.link}\n            id={movie.link}\n            title={movie.title}\n            link={movie.link}\n            image={movie.image}\n            subtitle={movie.subtitle}\n            pubDate={movie.pubDate}\n            actor={movie.actor}\n            userRating={movie.userRating}\n          />\n        ))}\n      </div>\n    </MovieListBlock>\n  );\n};\n\nexport default MovieList;\n","import React from 'react';\nimport MovieList from '../components/MovieList';\nimport styled from 'styled-components';\n\nconst MoviePageBlock = styled.div`\n  max-width: 980px;\n  margin: 0 auto;\n  h1 {\n    a {\n      display: block;\n      padding: 40px 0;\n      font-size: 45px;\n      color: #c0a789;\n      text-align: center;\n    }\n  }\n`;\n\nconst MoviePage = () => {\n  return (\n    <MoviePageBlock>\n      <h1>\n        <a href=\"/\">Movie Like</a>\n      </h1>\n      <MovieList />\n    </MoviePageBlock>\n  );\n};\n\nexport default MoviePage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport MoviePage from './pages/MoviePage';\n\nconst App = () => {\n  return (\n    <>\n      <Route path=\"/\" component={MoviePage} />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n/* style */\nimport './style/GlobalStyle.scss';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}